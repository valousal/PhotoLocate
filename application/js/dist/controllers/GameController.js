// Generated by CoffeeScript 1.8.0
(function() {
  var app;

  app = angular.module('Application');

  app.controller('GameController', function($scope, $rootScope, $resource, $http, $location, $routeParams, Session) {
    $scope.createGame = function() {
      return $http({
        method: 'POST',
        url: '/PhotoLocate/service/play/games',
        data: {
          player: $scope.games.player,
          level: $scope.games.level,
          ville: $scope.games.ville
        }
      }).success(function(games) {
        Session.set('token', games.token);
        Session.set('id', games.id);
        return $location.path("/games/");
      }).error(function() {
        return console.log('error createGame');
      });
    };
    $scope.GetPictures = function() {
      return $http({
        method: 'GET',
        url: '/PhotoLocate/service/play/games/' + Session.get('id') + '/photos?apiKey=' + Session.get('token')
      }).success(function(pictures) {
        return console.log('Ok GetPicture');
      }).error(function() {
        return console.log('error GetPicture');
      });
    };
    $scope.InitGame = function() {
      return $http({
        method: 'GET',
        url: "/PhotoLocate/service/play/games/" + Session.get('id') + "?apiKey=" + Session.get('token')
      }).success(function(games) {
        $scope.games = games;
        $scope.scoreTotal = 0;
        $scope.scoreManche = 0;
        $scope.nbMancheMax = 1;
        $scope.nbManche = 0;
        $scope.timerValue = 0;
        $scope.map = L.map('map').setView([10, 10], 13);
        $scope.markerTry = L.marker();
        $scope.distance = 0;
        $scope.origin = [10, 10];
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {}).addTo($scope.map);
        return $scope.GetPictures().then(function(response) {
          Session.set('pictures', response.data);
          console.log(Session.get('pictures'));
          $scope.pictures = response.data;
          $scope.debutPartie = function() {
            $('#scoreManche').hide();
            $('#partieDebut').hide();
            return $('#mancheSuivante').show();
          };
          $scope.mancheSuivante = function() {
            $scope.scoreManche = 0;
            $scope.resetTimer();
            return $scope.verifNbManche();
          };
          $scope.go = function() {
            $scope.nbManche += 1;
            $('#mancheSuivante').hide();
            $('#shadow').hide();
            $scope.markerTry = L.marker();
            $scope.distance = 0;
            return $scope.startTimer();
          };
          $scope.finManche = function(obj) {
            $scope.stopTimer();
            $scope.afficheScore(obj);
            $scope.showOrigin();
            return setTimeout(function() {
              $scope.resetMap();
              $('#shadow').show();
              return $('#scoreManche').show();
            }, 3000);
          };
          $scope.noTime = function() {
            $scope.stopTimer();
            $scope.showOrigin();
            return setTimeout(function() {
              $scope.resetMap();
              $('#shadow').show();
              return $('#scoreManche').show();
            }, 3000);
          };
          $scope.showOrigin = function() {
            return setTimeout(function() {
              return $scope.originMarker = L.circle($scope.origin, 15, {
                color: 'red',
                fillColor: '#red',
                fillOpacity: 0.5
              }).addTo($scope.map).bindPopup("C'Ã©tait ici!").openPopup();
            }, 1000);
          };
          $scope.afficheScore = function(obj) {
            $scope.markerTry.setLatLng(obj.latlng).addTo($scope.map);
            $scope.distance = $scope.markerTry.getLatLng().distanceTo($scope.origin);
            $scope.calculScore(1000, 3);
            $scope.scoreTotal += $scope.scoreManche;
            $scope.timeManche = $scope.seconds;
            return $scope.$apply();
          };
          $scope.calculScore = function(dist, time) {
            if (dist) {
              if ($scope.distance <= dist) {
                $scope.scoreManche = 5;
              }
              if ($scope.distance <= 2 * dist && $scope.distance > dist) {
                $scope.scoreManche = 3;
              }
              if ($scope.distance <= 3 * dist && $scope.distance > 2 * dist) {
                $scope.scoreManche = 1;
              }
              if ($scope.distance > 3 * dist) {
                $scope.scoreManche = 0;
              }
            }
            if (time) {
              if ($scope.timerValue <= time) {
                $scope.scoreManche *= 4;
              }
              if ($scope.timerValue <= 2 * time && $scope.timerValue > time) {
                $scope.scoreManche *= 2;
              }
              if ($scope.timerValue <= 3 * time && $scope.timerValue > 2 * time) {
                $scope.scoreManche *= 1;
              }
              if ($scope.timerValue > 3 * time) {
                return $scope.scoreManche *= 0;
              }
            }
          };
          $scope.resetMap = function() {
            $scope.map.removeLayer($scope.markerTry);
            $scope.map.removeLayer($scope.originMarker);
            return $scope.$apply();
          };
          $scope.verifNbManche = function() {
            if ($scope.nbManche < $scope.nbMancheMax) {
              $('#scoreManche').hide();
              return $('#mancheSuivante').show();
            } else {
              return $scope.finPartie();
            }
          };
          $scope.startTimer = function() {
            $scope.$broadcast('timer-start');
            return $scope.timerRunning = true;
          };
          $scope.stopTimer = function() {
            $scope.$broadcast('timer-stop');
            return $scope.timerRunning = false;
          };
          $scope.resetTimer = function() {
            $scope.$broadcast('timer-reset');
            return $scope.timerRunning = false;
          };
          $scope.$on('timer-tick', function(event, args) {
            $scope.timerValue = args.millis(+'');
            $scope.timerValue = parseInt($scope.timerValue / 1000);
            return $scope.timerValue = 10 - $scope.timerValue;
          });
          return $scope.finPartie = function() {
            $scope.stopTimer();
            return setTimeout(function() {
              $scope.resetMap();
              $('#scoreManche').hide();
              return $('#scoreFinal').show();
            }, 0);
          };
        });
      }).error(function() {
        return console.log($scope.games);
      });
    };
    $scope.PutGame = function() {
      return $http({
        method: 'PUT',
        url: '/PhotoLocate/service/play/games/72?apiKey=' + Session.get(),
        data: {
          status: 7330,
          score: 1
        },
        headers: {
          'Content-Type': 'application/json'
        }
      }).success(function() {
        return console.log('ok');
      }).error(function() {
        return console.log('error');
      });
    };
    return $scope.GetHighScore = function() {

      /*$http({
      			method: 'GET',
      			url: '/PhotoLocate/service/play/games/72?apiKey='+Session.get(),
      			data: {status: 7330, score: 1},
      			headers: {'Content-Type': 'application/json'}
      		}).success  ->
      			console.log('ok')
      		.error -> 
      			console.log('error')
       */
    };
  });

}).call(this);
